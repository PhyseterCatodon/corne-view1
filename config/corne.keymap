/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        Ecirc: Ecirc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp E>;
            label = "ECIRC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESC           &kp A  &kp Z  &kp F  &kp P       &kp B       &kp J     &kp L      &kp U  &kp Y          &kp EQUAL  &kp BSPC
&kp TAB           &kp Q  &kp R  &kp S  &kp T       &kp G       &kp SEMI  &kp N      &kp E  &kp I          &kp O      &kp NUMBER_4
&kp LEFT_CONTROL  &kp W  &kp X  &kp C  &kp D       &kp V       &kp K     &kp H      &kp M  &kp LESS_THAN  &kp DOT    &kp ENTER
                                &mo 1  &kp LSHIFT  &kp LWIN    &kp RALT  &kp SPACE  &mo 2
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)   &kp RA(N5)             &kp RA(MINUS)      &none     &none   &kp N5         &kp MINUS  &kp LS(RA(N5))  &kp LS(RA(MINUS))  &trans
&trans  &kp N0            &kp LEFT_BRACE     &kp N9                 &kp LEFT_BRACKET   &none     &none   &kp N7         &kp N2     &kp APOSTROPHE  &Ecirc             &kp N3
&trans  &kp NUMBER_1      &kp DOUBLE_QUOTES  &kp RA(RIGHT_BRACKET)  &kp RIGHT_BRACKET  &mo 4     &none   &kp RA(COMMA)  &kp LS(M)  &kp N8          &kp COMMA          &trans
                                             &trans                 &trans             &trans    &trans  &trans         &trans
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&trans  &none              &kp HOME       &kp UP_ARROW  &kp END    &kp PAGE_UP      &kp QUESTION  &kp AMPERSAND    &kp ASTERISK  &kp LPAR   &kp RIGHT_BRACE        &trans
&trans  &none              &kp LEFT       &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp SLASH     &kp DOLLAR       &kp PERCENT   &kp CARET  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET
&trans  &kp DOUBLE_QUOTES  &kp LS(MINUS)  &none         &none      &none            &kp EQUAL     &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp GREATER_THAN       &trans
                                          &trans        &trans     &trans           &trans        &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer1and2 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
